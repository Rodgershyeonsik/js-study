export와 import의 좀 더 다양한 사용법을 살펴보자

- 선언부와 떨어진 곳에 export를 붙일 수도 있음(./example/say.js)
- 가져올 것이 많으면 import * as <obj> 형태로 가져오기(./example/main.js)
- import as를 사용하면 이름을 바꿔 모듈을 가져올 수 있음(./example/main2.js)
- export as를 사용하면 이름을 바꿔 모듈을 내보낼 수 있음(./example/say.js, main.js)

모듈은 크게 두 가지로 나뉨
1. 복수의 함수가 있는 라이브러리 형태
2. 개체 하나만 선언되어있는 형태

대개는 두 번째 방식으로 모듈을 만들고, 함수, 클래스, 변수 등 개체는 전용 모듈 안에서 구현됨

모듈은 export default라는 특별 문법을 지원하는데,
'해당 모듈엔 개체가 하나만 있다'는 사실을 명확히 나타낼 수 있음
export default로 내보내면 중괄호 없이 import 가능
대개는 한 모듈에 export default인 개체 하나만 있지만, named export(export만 붙인 개체)도 같이 쓸 수는 있음

default를 붙여서 내보내는 경우, 개체 이름이 없어도 됨(파일에 개체 하나 뿐이라)
모듈 import할 때는 원하는 이름을 붙여서 사용

- export ... from 문법으로 모듈을 다시 내보낼 수 있음
  모듈 내부 구조는 숨기고, 공개할 기능만 진입점 파일을 통해 깔끔하게 내보낼 때 사용
  default export를 다시 내보낼 때는 export {default} from ... 으로 사용해야 함
  export * from ... 형태로 사용 시 named export만 내보내지고 default export는 무시됨